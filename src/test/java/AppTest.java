/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

public class AppTest {

    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream(); //Used for checking if print statements are correct
    private final PrintStream originalOut = System.out; //Used to restore the outputstream back to the original stdOut

    @Before public void setUpStreams() {
	System.setOut(new PrintStream(outContent)); //Set the output stream to a custom printstream for checking output
    }
    
    @Before public void initializeObjects() {
	Thing t = new Thing("Person");
	Tiger c = new Tiger("Tony");
    }
    
    @Test public void testThingInstantiation() {
        assertEquals("Person", t.toString());
    }

    @Test public void testTigerMove() {
	outContent.reset(); //Always clear the output for another test
	c.move();
	assertEquals("Tony Tiger has just pounced.", outContent.toString());	
    }

    @Test public void testCreatureNoMeal() {
	outContent.reset();
	c.whatDidYouEat();
        assertEquals("Tony Tiger has had nothing to eat!", outContent.toString());
    }

    @Test public void testCreatureEat() {
	outContent.reset();
	c.eat("zebra");
	assertEquals("Tony Tiger has just eaten a zebra", outContent.toString());
    }

    @Test public void testCreaturePreviousMeal() {
	outContent.reset();
        c.whatDidYouEat();
        assertEquals("Tony Tiger has eaten a zebra!", outContent.toString());
    }

    @After public void restoreStreams() {
	System.setOut(originalOut);
    }

}
